# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Dec 22 21:48:28 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))