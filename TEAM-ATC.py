# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Dec 26 17:20:32 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))